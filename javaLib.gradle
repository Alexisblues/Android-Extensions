apply plugin: 'java-library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'signing'

bintray {
    user = parent.ext.bintrayUser
    key = parent.ext.bintrayApiKey

    // jFrog plugin must be declared for this line to work
    configurations = ['archives']
    publications = ['lib']
    // Package info for BinTray
    pkg {
        repo = 'maven'
        name = 'android-bootstrap'
        userOrg = user
        licenses = ['MIT']
        vcsUrl = 'https://github.com/tunjid/android-bootstrap.git'
        version {
            name = '4.0.0'
            desc = 'An suite of libraries to bootstrap an Android application.'
            vcsTag = '4.0.0'
        }
    }
}

publishing {
    publications {
        lib(MavenPublication) {
            version = parent.ext.javaLibraryVersion
            groupId parent.ext.groupId
            artifactId project.getName()

            from components.java
            artifact sourcesJar
            artifact javadocJar

            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    if (it.group != null && it.name != null && it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url parent.ext.artifactoryUrl
        }
    }
}

// Gradle task to generate sources after building a release aar
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

//signing {
//    sign publishing.publications.mavenJava
//}


javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
